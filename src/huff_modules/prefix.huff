// Note that PREFIX_HEAD is a partial macro. It ends with a 73 PUSH20 op
// that contains no data, meaning there must be 20 bytes of data appended to it.
// The kill prefix consists of:
// PREFIX_HEAD + ${authorized_address} + PREFIX_TAIL
// where authorized_address is the address that can trigger selfdestruct

// stack: [ bottom top ]

// func_sig("kill()")
#define macro KILL_SIG = takes(0) returns(1) { 0x41c0e1b5 }

#define macro PREFIX_HEAD = takes(0) returns(4) {
  // check calldatasize == 4 (adds 4 bytes)
  0x04 calldatasize eq

  // check calldata == func_sig("kill()")
  0x00 calldataload KILL_SIG() 0xe0 shl eq  // [ (cld_len == 4) (cld == kill) ]

  // ** this must be followed by an address to push onto the stack
  push20
}

#define macro PREFIX_TAIL = takes(4) returns(0) {
  // [ (cld_len == 4) (cld == kill) killer ]

  // check caller == killer
  caller eq           // [ (cld_len == 4) (cld == kill) (caller == killer) ]

  and and iszero      // [ not(is_valid_kill_call) ]
  runtime_dest jumpi  // [ runtime_dest ]
  caller selfdestruct

  runtime_dest:   // resume previously scheduled runtime activities
  ///assert(stack_empty)
}
